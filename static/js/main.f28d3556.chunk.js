(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,t,n){e.exports=n(18)},16:function(e,t,n){},17:function(e,t,n){},18:function(e,t,n){"use strict";n.r(t);var a=n(0),l=n.n(a),r=n(3),c=n.n(r),o=(n(16),n(4)),i=n(5),s=n(8),u=n(6),h=n(9),m=(n(17),n(1)),d=n(7),p=n(20),E=function(e){var t=e.open,n=e.list,r=e.onClose;console.log("Child...");var c=Object(a.useState)([]),o=Object(m.a)(c,2),i=o[0],s=o[1];Object(a.useEffect)(function(){n&&n.length&&s(Object(d.a)(n))},[n]);return t?l.a.createElement(a.Fragment,null,l.a.createElement("h3",null,"Child list to edit"),l.a.createElement("p",null,"Edit some values and click cancel."),l.a.createElement("p",null,"The values you have changed should not be reflected in the parent but they are :("),i.map(function(e){return l.a.createElement("div",{key:e.id},l.a.createElement("input",{type:"text",value:e.name,onChange:function(t){return function(e,t){var n=e.currentTarget.value,a=Object(p.a)(function(e){return e.id===t.id&&(e.name=n),e},i);s(a)}(t,e)}}))}),l.a.createElement("hr",null),l.a.createElement("button",{onClick:r},"Cancel & close child")):l.a.createElement(a.Fragment,null)},f=[{id:"1",name:"First"},{id:"2",name:"Second"}],b=function(e){console.log("Parent...");var t=Object(a.useState)([]),n=Object(m.a)(t,2),r=n[0],c=n[1],o=Object(a.useState)(!1),i=Object(m.a)(o,2),s=i[0],u=i[1];Object(a.useEffect)(function(){c(f)},[]);return l.a.createElement(a.Fragment,null,l.a.createElement("h1",null,"The problem"),l.a.createElement("p",null,'I have two component (Parent and Child), the parent has is using local state for "list", which is being passed down to the child as a prop.'),l.a.createElement("p",null,"The child then takes that prop and creates a local state of it's own from that list to edit it."),l.a.createElement("p",null,"The child has an inputHandler to edit the list's values within it's own local state."),l.a.createElement("p",null,"The child also has a prop for onClose which is triggered from the parent."),l.a.createElement("p",null,"As soon as the onClose is triggered from the parent, the parent list is being updated with the values from the child state, which is not what I expected as the child's state is totally separate."),l.a.createElement("p",null,"Any ideas?"),l.a.createElement("hr",null),l.a.createElement("h2",null,"Parent list"),r.map(function(e){return l.a.createElement("div",{key:e.id},e.name)}),l.a.createElement("hr",null),l.a.createElement("button",{onClick:function(){return u(!0)}},"Open child"),l.a.createElement("hr",null),l.a.createElement(E,{open:s,list:r,onClose:function(){u(!1)}}))},w=function(e){function t(){return Object(o.a)(this,t),Object(s.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(i.a)(t,[{key:"render",value:function(){return l.a.createElement("div",{className:"App"},l.a.createElement("header",{className:"App-header"},l.a.createElement(b,null)))}}]),t}(a.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));c.a.render(l.a.createElement(w,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[10,1,2]]]);
//# sourceMappingURL=main.f28d3556.chunk.js.map